spring.datasource.url = jdbc:mysql://localhost:3306/food_ordering?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username = root
spring.datasource.password = root
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.datasource.driver-class-name=com.mysql.jdbc.Driver

server.port=8182
## QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.schema=classpath:org/quartz/impl/jdbcjobstore/tables_mysql_innodb.sql
#spring.quartz.properties.org.quartz.threadPool.threadCount=5
spring.quartz.scheduler.jmx.export=true
#org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX



# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#spring.jpa.show-sql = true

#rabbitMq config
spring.rabbitmq.host=localhost
#spring.rabbitmq.virtualHost: vhA
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=Admin@123

jsa.rabbitmq.queue.broadcast=twillio-api-ldev-1
rabbitmq.queue.app=twillio-api-ldev
jsa.rabbitmq.routingkey=com.gm.cache.refresh-ldev
spring.rabbitmq.listener.simple.acknowledge-mode=auto

# Show or not log for each sql query
spring.jpa.show-sql = true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update


# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL55Dialect
hibernate.dialect.storage_engine = innodb

#logging
logging.file = logs/gmc/gmc.log
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
#logging.pattern.console=

# Azure search for medicine
search.serviceName=gm-ms-qa-ind
search.serviceApiKey=9D1A036BCF661F7A4E2572E4139593A8
search.indexName=gm-msindexnew-qa-ind
search.apiVersion=2016-09-01
search.searchFields=MedicineName
search.queryType=full
search.highlight=MedicineName
search.highlightPreTag=%3Cb%3E
search.highlightPreTagDecoded=<b>
search.highlightPostTag=%3C%2Fb%3E
search.highlightPostTagDecoded=</b>
search.url=https://${search.serviceName}.search.windows.net/indexes/${search.indexName}/docs?api-version=${search.apiVersion}&searchFields=${search.searchFields}&queryType=${search.queryType}&highlightPreTag=${search.highlightPreTag}&highlightPostTag=${search.highlightPostTag}&highlight=${search.highlight}&search=

# Azure blob storage
storage.defaultendpointsprotocol=https
storage.accountname=gmstorageqaind
storage.accountkey=gdga4FpUhgW6MPA0XEPkhpCjV2B4RpxKksiaKTjm+hY9f7AMT9fYYhBcGbxkQnZHW2UDqHJNHQr8huuf/ZuaWQ==
storage.connectionstring=DefaultEndpointsProtocol=${storage.defaultendpointsprotocol};AccountName=${storage.accountname};AccountKey=${storage.accountkey}
storage.containerreference=gmcdocument

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=75MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads

#//Email setting

spring.mail.host= smtp.gmail.com
spring.mail.port= 587
spring.mail.username= himanshu.swarnakar@gomedii.com
spring.mail.password= gomedii
spring.mail.transport.protocol= smtp
spring.mail.properties.mail.smtp.auth= true
spring.mail.properties.mail.smtp.starttls.enable= true
#spring.mail.properties.mail.smtp.starttls.required: true
#spring.mail.properties.mail.smtp.ssl.enable: true
#spring.mail.test-connection: true
spring.mail.from.email=GoMedii Clinic <cs@gomedii.com> 
spring.mail.debug= true

email.gmc.cc=
uhid.format=%04d-%04d
hashid.format=%08d
emr.access.uhid.token.validity.ms=864000000

#// SMS Provider
sms.provider=MSG91

logging.level.org.springframework.security.oauth2=debug
logging.level.org.springframework.security.jwt=debug

